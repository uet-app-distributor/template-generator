version: '3.8'

services:
  proxy:
    container_name: proxy
    image: nginx:1.24
    ports:
      - 80:80
    volumes:
      - type: bind
        source: /opt/nginx.conf
        target: /etc/nginx/nginx.conf
    networks:
      - customer_app

  {% if enable_frontend -%}
  frontend:
    container_name: frontend
    image: {{ registry_user }}/fe-{{ app_owner }}-{{ app_name }}:latest
    ports:
      - 127.0.0.1:80
    environment:
      {% for key, value in env_vars.items() -%}
      {{ key }}: {{ value }}
      {% endfor -%}
    networks:
      - customer_app
  {% endif %}

  {%- if enable_backend %}
  backend:
    container_name: backend
    image: {{ registry_user }}/be-{{ app_owner }}-{{ app_name }}:latest
    ports:
      - 127.0.0.1:8080
    networks:
      - customer_app
  {% endif %}

  {%- if enable_database %}
  {%- if database_type == "postgres" %}
  database:
    container_name: database
    image: postgres:latest
    environment:
      POSTGRES_DB: {{ app_name }}
      POSTGRES_USER: {{ app_owner }}
      POSTGRES_PASSWORD: {{ app_owner }}
    ports:
      - "5432:5432"
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - customer_app

volumes:
  postgres:
  {% elif database_type == "mongodb" %}
  database:
    image: mongo:latest
    environment:
      MONGO_INITDB_ROOT_USERNAME: {{ app_owner }}
      MONGO_INITDB_ROOT_PASSWORD: {{ app_owner }}
    ports:
      - "27017:27017"
    volumes:
      - mongo:/data/db
    networks:
      - customer_app

volumes:
  mongo:
  {% endif %}
  {% endif %}

networks:
  customer_app:
